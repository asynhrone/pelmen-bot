from vkbottle.bot import BotLabeler, Message, Bot
from functions import (get_user, insert_user, get_fishing, fishing_update_cooldown, 
                       fish_rob_upgrade, converter, casino_win, casino_lose)
from config import (successfull_registration, token, multipliers, weights, limits)
import random
from random import choice
from datetime import datetime, timedelta
import re

gl = BotLabeler()
gl.vbml_ignore_case = True
bot = Bot(token=token)

@gl.message(text="–†—ã–±–∞–ª–∫–∞")
async def fishing_page(message: Message):
    user = await bot.api.users.get(message.from_id)
    user_info = await get_user(user_id=user[0].id)
    if user_info:
        now = datetime.now()
        if user_info['last_fishing_time'] is None:
            display_fishing = "‚õ± –†—ã–±–∞–ª–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞! –î–ª—è –Ω–∞—á–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ¬´–†—ã–±–∞—á–∏—Ç—å¬ª."
        elif now - user_info['last_fishing_time'] < timedelta(hours=2):
            display_fishing = "‚õ± –†—ã–±–∞–ª–∫–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        else:
            display_fishing = "‚õ± –†—ã–±–∞–ª–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞! –î–ª—è –Ω–∞—á–∞–ª–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: ¬´–†—ã–±–∞—á–∏—Ç—å¬ª."

        photo_id = 'photo-222672748_456239023_d018eef133566f8d64'
        await message.answer(f"@id{user_info['id']}({user_info['nickname']}), —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Ä—ã–±–∞–ª–∫–∏:"
                             f"\n\n{display_fishing}"
                             f"\nüîß {user_info['fishing_rob_level']} –£—Ä–æ–≤–µ–Ω—å —É–¥–æ—á–∫–∏"
                             "\n\n‚ùì –°–¢–û–ò–ú–û–°–¢–¨ —É–ª—É—á—à–µ–Ω–∏—è —É–¥–æ—á–∫–∏ 25000 EXP –∑–∞ –£–†–û–í–ï–ù–¨."
                             " –ó–∞ –ö–ê–ñ–î–´–ô –Ω–æ–≤—ã–π –£–†–û–í–ï–ù–¨ –î–û–•–û–î, –ø–æ–ª—É—á–∞–µ–º—ã–π –≤–∞–º–∏ –£–í–ï–õ–ò–ß–ò–í–ê–ï–¢–°–Ø –≤–¥–≤–æ–µ,"
                             " –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Ä–æ–≤–Ω–µ–π –ù–ï–û–ì–†–ê–ù–ò–ß–ï–ù–û.", attachment=photo_id)
    else:
        await insert_user(user_id=user[0].id, first_name=user[0].first_name) 
        return await message.answer(successfull_registration)
    
@gl.message(text="–†—ã–±–∞—á–∏—Ç—å")
async def fishing(message: Message):
    user = await bot.api.users.get(message.from_id)
    user_info = await get_user(user_id=user[0].id)
    if user_info:
        now = datetime.now()
        if user_info['last_fishing_time'] is None:
            fish_level = user_info['fishing_rob_level']
            win_dollars = fish_level*random.randint(100000, 1500000)
            win_exp = random.randint(1000, 3000)
            exp_count = user_info['exp']
            await get_fishing(user_id=user_info['id'], win_dollars=win_dollars, win_exp=win_exp, exp_count=exp_count)
            await fishing_update_cooldown(user_id=user_info['id'], new_fishing_time=now.isoformat())
            await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –Ω–∞ —Ä—ã–±–∞–ª–∫—É:"
                                f"\n\nüí∏ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {win_dollars:,}$ –∏ {win_exp:,} EXP".replace(',','.') +
                                f"\n\n‚ùì –ß–µ–º –±–æ–ª—å—à–µ —É—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–π —É–¥–æ—á–∫–∏, —Ç–µ–º –±–æ–ª—å—à–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å")
        else:
            if now - user_info['last_fishing_time'] < timedelta(hours=2):
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), —Ä—ã–±–∞—á–∏—Ç—å –º–æ–∂–Ω–æ —Ä–∞–∑ –≤ 2 —á–∞—Å–∞ ‚ùå")
            else:
                fish_level = user_info['fishing_rob_level']
                win_dollars = fish_level*random.randint(100000, 1500000)
                win_exp = random.randint(1000, 3000)
                exp_count = user_info['exp']
                await get_fishing(user_id=user_info['id'], win_dollars=win_dollars, win_exp=win_exp, exp_count=exp_count)
                await fishing_update_cooldown(user_id=user_info['id'], new_fishing_time=now.isoformat())
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏—Å—å –Ω–∞ —Ä—ã–±–∞–ª–∫—É:"
                                    f"\n\nüí∏ –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {win_dollars:,}$ –∏ {win_exp:,} EXP".replace(',','.') +
                                    f"\n\n‚ùì –ß–µ–º –±–æ–ª—å—à–µ —É—Ä–æ–≤–µ–Ω—å –≤–∞—à–µ–π —É–¥–æ—á–∫–∏, —Ç–µ–º –±–æ–ª—å—à–µ –≤—ã –º–æ–∂–µ—Ç–µ –∑–∞—Ä–∞–±–æ—Ç–∞—Ç—å")
    else:
        await insert_user(user_id=user[0].id, first_name=user[0].first_name) 
        return await message.answer(successfull_registration)
    

@gl.message(text="–£–¥–æ—á–∫–∞ —É–ª—É—á—à–∏—Ç—å")
async def fishing(message: Message):
    user = await bot.api.users.get(message.from_id)
    user_info = await get_user(user_id=user[0].id)
    if user_info:
        if user_info['exp'] < 25000:
            await message.answer(f"@id{user_info['id']}({user_info['nickname']}), —É –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ EXP ‚ùå")
        else:
            await fish_rob_upgrade(user_id=user_info['id'])
            new_fish_lvl_rob = user_info['fishing_rob_level']+1
            await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã —É–ª—É—á—à–∏–ª–∏ —É–¥–æ—á–∫—É –¥–æ {new_fish_lvl_rob} —É—Ä–æ–≤–Ω—è üëç")
    else:
        await insert_user(user_id=user[0].id, first_name=user[0].first_name) 
        return await message.answer(successfull_registration)
    

@gl.message(text=['–ö–∞–∑–∏–Ω–æ', '–ê–∑–∏–Ω–æ', '–ö–∞–∑–∏–Ω–æ <count>', '–ê–∑–∏–Ω–æ <count>'])
async def casino(message: Message, count=None):
    user_id = message.from_id
    user_info = await get_user(user_id=user_id)

    if not user_info:
        user = (await bot.api.users.get(user_id))[0]
        await insert_user(user_id=user_id, first_name=user[0].first_name)
        return await message.answer(successfull_registration)

    if count is None:
        return await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: –ö–∞–∑–∏–Ω–æ ¬´—Å—Ç–∞–≤–∫–∞¬ª")

    balance = user_info['balance']
    if count in ["–≤—Å–µ", "–≤–æ–±–∞–Ω–∫", "–≤–∞–±–∞–Ω–∫", "–≤–æ –±–∞–Ω–∫", "–≤–∞ –±–∞–Ω–∫"]:
        bet = balance
    else:
        bet = await converter(count=count)

    if bet <= 0 or bet > balance:
        return await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ ‚ùå")

    multiplier = random.choices(multipliers, weights=weights, k=1)[0]
    result_msg = ""
    res = bet * multiplier 
    balance = user_info['balance']
    
    limit = limits.get(user_info['status'], float('inf'))  
    
    if multiplier == 0:
        await casino_lose(user_id=user_info['id'], bet=bet)
        result_msg = f"–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {int(bet):,}$ (x0) ‚ùå"
    else:
        new_balance = res + balance
        if new_balance > limit:  
            res = limit - balance  
            
        if multiplier < 1:
            await casino_lose(user_id=user_info['id'], bet=res)
            result_msg = f"–≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {int(res):,}$ (x{multiplier}) ‚ùå"
        elif multiplier == 1:
            result_msg = "–¥–µ–Ω—å–≥–∏ –æ—Å—Ç–∞—é—Ç—Å—è –ø—Ä–∏ –≤–∞—Å (x1) üòØ "
        else:
            await casino_win(user_id=user_info['id'], bet=res)
            result_msg += f"–≤—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {int(res):,}$ (x{multiplier}) ü§ë"

    await message.answer(f"@id{user_info['id']}({user_info['nickname']}), {result_msg}".replace(',', '.'))
