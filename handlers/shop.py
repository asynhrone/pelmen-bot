from vkbottle.bot import BotLabeler, Message, Bot
from functions import get_user, insert_user, buy_them
from config import successfull_registration, token, flat_cost, car_cost, yacht_cost

shl = BotLabeler()
shl.vbml_ignore_case = True
bot = Bot(token=token)

@shl.message(text=["–ú–∞–≥–∞–∑–∏–Ω"])
async def shop(message: Message, type=None, number=None):
    user = await bot.api.users.get(message.from_id)
    user_info = await get_user(user_id=user[0].id)
    if user_info: 
        return await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –º–∞–≥–∞–∑–∏–Ω:"
                "\n\nüè¨ –ö–≤–∞—Ä—Ç–∏—Ä—ã"
                "\nüöó –ú–∞—à–∏–Ω—ã"
                "\nüõ•Ô∏è –Ø—Ö—Ç—ã"
                "\n\nüõí –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ö–≤–∞—Ä—Ç–∏—Ä—ã")  
    else:
        await insert_user(user_id=user[0].id, first_name=user[0].first_name) 
        return await message.answer(successfull_registration)
    

@shl.message(text=["–ö–≤–∞—Ä—Ç–∏—Ä—ã", "–ö–≤–∞—Ä—Ç–∏—Ä—ã <number:int>"])
async def flats(message: Message, number=None):
    user = await bot.api.users.get(message.from_id)
    user_info = await get_user(user_id=user[0].id)
    if user_info: 
        if number is not None:
            suffix = {"1": "–∫–≤–∞—Ä—Ç–∏—Ä—É –≤ —Ö—Ä—É—â–µ–≤–∫–µ", "2": "–∫–≤–∞—Ä—Ç–∏—Ä—É –≤ —Ü–µ–Ω—Ç—Ä–µ –ß–µ–ª—è–±–∏–Ω—Å–∫–∞", "3": "–∫–≤–∞—Ä—Ç–∏—Ä—É –Ω–∞ –æ–∫—Ä–∞–∏–Ω–µ –ü–∏—Ç–µ—Ä–∞", "4": "–∫–≤–∞—Ä—Ç–∏—Ä—É –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã", "5": "–∫–≤–∞—Ä—Ç–∏—Ä—É –≤ –ù—å—é-–ô–æ—Ä–∫–µ", "6": "–∫–≤–∞—Ä—Ç–∏—Ä—É –≤ —Å–µ—Ä–¥—Ü–µ –ü–µ–∫–∏–Ω–∞", "7": "–∫–≤–∞—Ä—Ç–∏—Ä—É –≤ Odeon Tower"}
            if number <= 0 or number > 7:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –∫–≤–∞—Ä—Ç–∏—Ä—ã ‚ùå")
            elif int(flat_cost.get(str(number), 0)) > user_info["balance"]:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùå")
            elif user_info["flat"] is not None and user_info["flat"] != 0:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–≤–∞—Ä—Ç–∏—Ä–∞‚ùå")
            else:
                price = flat_cost.get(str(number))
                await buy_them(user_id=user_info['id'], type='flat', product=number)
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã –∫—É–ø–∏–ª–∏ {suffix.get(str(number))} –∑–∞ {int(price):,}$ ü•≥".replace(',', '.'))
        else:
            return await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –∫–≤–∞—Ä—Ç–∏—Ä—ã:"
                "\n\n1. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ö—Ä—É—â–µ–≤–∫–µ - 25.000$"
                "\n2. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –ß–µ–ª—è–±–∏–Ω—Å–∫–∞ - 1.000.000$"
                "\n3. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –Ω–∞ –æ–∫—Ä–∞–∏–Ω–µ –ü–∏—Ç–µ—Ä–∞ - 50.000.000.000"
                "\n4. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Ü–µ–Ω—Ç—Ä–µ –ú–æ—Å–∫–≤—ã - 300.000.000.000.000$"
                "\n5. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ –ù—å—é-–ô–æ—Ä–∫–µ - 500.000.000.000.000$"
                "\n6. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ —Å–µ—Ä–¥—Ü–µ –ü–µ–∫–∏–Ω–∞ - 750.000.000.000.000"
                "\n7. –ö–≤–∞—Ä—Ç–∏—Ä–∞ –≤ Odeon Tower - 3.000.000.000.000.000$"
                "\n\nüõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ö–≤–∞—Ä—Ç–∏—Ä—ã ¬´–Ω–æ–º–µ—Ä¬ª")  
    else:
        await insert_user(user_id=user[0].id, first_name=user[0].first_name) 
        return await message.answer(successfull_registration)
    

@shl.message(text=["–ú–∞—à–∏–Ω—ã", "–ú–∞—à–∏–Ω—ã <number:int>"])
async def cars(message: Message, number=None):
    user = await bot.api.users.get(message.from_id)
    user_info = await get_user(user_id=user[0].id)
    if user_info: 
        if number is not None:
            suffix = {"1": "Nissan Pathfinder", "2": "Mazda 6", "3": "Mercedes-Benz CLS", "4": "Audi R8", 
                      "5": "Ferrari 458 Italia", "6": "Mercedes-Benz Pullman", "7": "Rolls-Royce Sweptail", "8": "Bugatti Bolide"}
            if number <= 0 or number > 8:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã ‚ùå")
            elif int(car_cost.get(str(number), 0)) > user_info["balance"]:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùå")
            elif user_info["car"] is not None and user_info["car"] != 0:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞‚ùå")
            else:
                price = car_cost.get(str(number))
                await buy_them(user_id=user_info['id'], type='car', product=number)
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã –∫—É–ø–∏–ª–∏ {suffix.get(str(number))} –∑–∞ {int(price):,}$ ü•≥".replace(',', '.'))
        else:
            return await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –º–∞—à–∏–Ω—ã:"
                "\n\n1. Nissan Pathfinder - 10.000.000.000$"
                "\n2. Mazda 6 - 1.000.000.000.000$"
                "\n3. Mercedes-Benz CLS - 10.000.000.000.000$"
                "\n4. Audi R8 - 25.000.000.000.000$"
                "\n5. Ferrari 458 Italia - 250.000.000.000.000$"
                "\n6. Mercedes-Benz Pullman - 900.000.000.000.000$"
                "\n7. Rolls-Royce Sweptail - 1.200.000.000.000.000$"
                "\n8. Bugatti Bolide - 3.000.000.000.000.000$"
                "\n\nüõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –ú–∞—à–∏–Ω—ã ¬´–Ω–æ–º–µ—Ä¬ª")  
    else:
        await insert_user(user_id=user[0].id, first_name=user[0].first_name) 
        return await message.answer(successfull_registration)
    

@shl.message(text=["–Ø—Ö—Ç—ã", "–Ø—Ö—Ç—ã <number:int>"])
async def yachts(message: Message, number=None):
    user = await bot.api.users.get(message.from_id)
    user_info = await get_user(user_id=user[0].id)
    if user_info: 
        if number is not None:
            suffix = {"1": "Seven Seas", "2": "Octopus", "3": "Lady Moura", "4": "Al Mirqab", 
                      "5": "Eclipse", "6": "Histoty SUPREMEE"}
            if number <= 0 or number > 6:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –Ω–µ–≤–µ—Ä–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã ‚ùå")
            elif int(yacht_cost.get(str(number), 0)) > user_info["balance"]:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤‚ùå")
            elif user_info["yacht"] is not None and user_info["yacht"] != 0:
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –º–∞—à–∏–Ω–∞‚ùå")
            else:
                price = yacht_cost.get(str(number))
                await buy_them(user_id=user_info['id'], type='yacht', product=number)
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã –∫—É–ø–∏–ª–∏ {suffix.get(str(number))} –∑–∞ {int(price):,}$ ü•≥".replace(',', '.'))
        else:
            return await message.answer(f"@id{user_info['id']}({user_info['nickname']}), —è—Ö—Ç—ã:"
                "\n\n1. Seven Seas - 1.000.000$"
                "\n2. Octopus - 10.000.000$"
                "\n3. Lady Moura - 70.000.000$"
                "\n4. Al Mirqab - 250.000.000$"
                "\n5. Eclipse - 2.500.000.000$"
                "\n6. Histoty SUPREMEE - 30.000.000.000$"
                "\n\nüõí –î–ª—è –ø–æ–∫—É–ø–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: –Ø—Ö—Ç—ã ¬´–Ω–æ–º–µ—Ä¬ª")  
    else:
        await insert_user(user_id=user[0].id, first_name=user[0].first_name) 
        return await message.answer(successfull_registration)