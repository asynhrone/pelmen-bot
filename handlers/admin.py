from vkbottle.bot import BotLabeler, Message, Bot
from functions import get_user, converter, set_them, bot_get_user
from config import token
from datetime import datetime, timedelta
import time

al = BotLabeler()
al.vbml_ignore_case = True
bot = Bot(token=token)

@al.message(text="–°–æ—Å—Ç–æ—è–Ω–∏–µ")
async def monitoring(message: Message):
    user = await bot.api.users.get(message.from_id)
    start_time = time.time()
    user_info = await get_user(user_id=user[0].id)
    if user_info['status'] in ['–í–ª–∞–¥–µ–ª–µ—Ü', '–£–ø—Ä–∞–≤–ª—è—é—â–∏–π']:
        end_time = time.time()
        ping_time = round(end_time - start_time, 3)
        current_time = datetime.now().strftime("%d.%m.%Y %H:%M")
        photo_id = "photo-222672748_456239022_acd808e85b126ec97c"
        await message.answer(f"@id{user_info['id']}({user_info['nickname']}), —Å—Ç—Ä–æ–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è:"
                             f"\n\n‚åõ {current_time}"
                             f"\nüß≠ –ü–∏–Ω–≥: {ping_time} –º—Å."
                             "\nüîî –°—Ç–∞—Ç—É—Å: –ó–∞–ø—É—â–µ–Ω.", attachment=photo_id)
    else:
        return
    

@al.message(text=["–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å <type> <count> <userid>"])
async def set(message: Message, type=None,count=None, userid=None):
    user = await bot.api.users.get(message.from_id)
    user_info = await get_user(user_id=user[0].id)
    if user_info['status'] in ['–í–ª–∞–¥–µ–ª–µ—Ü', '–£–ø—Ä–∞–≤–ª—è—é—â–∏–π']:
        if type is not None and count is not None and userid is not None:
            if type in ['–ë–∞–ª–∞–Ω—Å', '–±–∞–ª–∞–Ω—Å']:
                type = 'balance'
                userid = await bot_get_user(user_id=userid)
                count = await converter(count=count)
                await set_them(user_id=userid['id'], type=type, count=count)
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ @id{userid['id']}({userid['nickname']})"
                                     f" {count:,}$ ‚úÖ".replace(',', '.'))
            if type in ['EXP', 'exp', 2]:
                type = 'exp'
                userid = await bot_get_user(user_id=userid)
                count = await converter(count=count)
                await set_them(user_id=userid['id'], type=type, count=count)
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ @id{userid['id']}({userid['nickname']})"
                                     f" {count:,} EXP ‚úÖ".replace(',', '.'))
            if type in ['–£–¥–æ—á–∫–∞', '—É–¥–æ—á–∫–∞', '–£–¥–æ—á–∫—É', '—É–¥–æ—á–∫—É']:
                type = 'fishing_rob_level'
                userid = await bot_get_user(user_id=userid)
                count = await converter(count=count)
                await set_them(user_id=userid['id'], type=type, count=count)
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ @id{userid['id']}({userid['nickname']})"
                                     f" —É–¥–æ—á–∫—É {count:,} LVL ‚úÖ".replace(',', '.'))
            if type in ['–ë–∏—Ç–∫–æ–∏–Ω', '–±–∏—Ç–∫–æ–∏–Ω']:
                type = 'bitcoin'
                userid = await bot_get_user(user_id=userid)
                count = await converter(count=count)
                await set_them(user_id=userid['id'], type=type, count=count)
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ @id{userid['id']}({userid['nickname']})"
                                     f" {count:,}‚Çø ‚úÖ".replace(',', '.'))
            if type in ['–ù–∏–∫', '–Ω–∏–∫']:
                type = 'nickname'
                userid = await bot_get_user(user_id=userid)
                await set_them(user_id=userid['id'], type=type, count=count)
                await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –≤—ã —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∏ @id{userid['id']}({userid['nickname']})"
                                     f" –Ω–∏–∫ {count} ‚úÖ")
        else:
            await message.answer(f"@id{user_info['id']}({user_info['nickname']}), –¥–æ—Å—Ç—É–ø–Ω—ã–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏:"
                                 "\n\n1. –ë–∞–ª–∞–Ω—Å"
                                 "\n2. EXP"
                                 "\n3. –£–¥–æ—á–∫–∞"
                                 "\n4. –ë–∏—Ç–∫–æ–∏–Ω"
                                 "\n5. –ù–∏–∫"
                                 "\n\n‚ùì –ü—Ä–∏–º–µ—Ä: —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å ¬´–±–∞–ª–∞–Ω—Å¬ª ¬´—Å—É–º–º–∞¬ª ¬´id¬ª")
    else:
        return